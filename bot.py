import os
import random
from datetime import datetime, timedelta

from telegram import Update, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder,
    CommandHandler,
    ContextTypes,
    MessageHandler,
    filters,
)
from apscheduler.schedulers.asyncio import AsyncIOScheduler

from stoic_quotes_100 import QUOTES

BOT_TOKEN = os.getenv("BOT_TOKEN")

TIMEZONES = {
    "–õ–æ–Ω–¥–æ–Ω": 1,
    "–†–∏–º": 2,
    "–ë–∞—Ä—Å–µ–ª–æ–Ω–∞": 2,
    "–ö–∏–µ–≤": 3,
    "–ú–æ—Å–∫–≤–∞": 3,
    "–°–∞–º–∞—Ä–∞": 4,
    "–¢–±–∏–ª–∏—Å–∏": 4
}

users = {}

app = ApplicationBuilder().token(BOT_TOKEN).build()

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[city] for city in TIMEZONES.keys()]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

    welcome_text = (
        "‚è∞ –ß—Ç–æ–±—ã –ø–æ–ª—É—á–∞—Ç—å —Å—Ç–æ–∏—á–µ—Å–∫–∏–µ —Ü–∏—Ç–∞—Ç—ã —Ä–æ–≤–Ω–æ –≤ 9 —É—Ç—Ä–∞ –ø–æ –≤–∞—à–µ–º—É –≤—Ä–µ–º–µ–Ω–∏,\n"
        "–ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –±–ª–∏–∂–∞–π—à–∏–π –∫ –≤–∞–º –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞ –Ω–∏–∂–µ:"
    )

    await update.message.reply_text(welcome_text, reply_markup=reply_markup)

async def handle_city_choice(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_city = update.message.text
    chat_id = update.message.chat_id

    if user_city in TIMEZONES:
        timezone = TIMEZONES[user_city]
        users[chat_id] = timezone
        await update.message.reply_text(
            f"‚úÖ –û—Ç–ª–∏—á–Ω–æ! –¢–µ–ø–µ—Ä—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å —Ü–∏—Ç–∞—Ç—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9:00 —É—Ç—Ä–∞ –ø–æ –≤—Ä–µ–º–µ–Ω–∏ {user_city}."
        )
        await update.message.reply_text(
            "üîî –ß—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å —Ü–∏—Ç–∞—Ç—ã, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å, —á—Ç–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –¥–ª—è —ç—Ç–æ–≥–æ –±–æ—Ç–∞ –≤–∫–ª—é—á–µ–Ω—ã.\n"
            "–û—Ç–∫—Ä–æ–π –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —á–∞—Ç–∞ –∏ —É–±–µ–¥–∏—Å—å, —á—Ç–æ –∑–≤—É–∫ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –∞–∫—Ç–∏–≤–µ–Ω."
        )
    else:
        await update.message.reply_text(
            "üëá –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –≥–æ—Ä–æ–¥ –∏–∑ —Å–ø–∏—Å–∫–∞, –∏—Å–ø–æ–ª—å–∑—É—è –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂–µ."
        )

async def set_city(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[city] for city in TIMEZONES.keys()]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)

    await update.message.reply_text(
        "üåç –í—ã–±–µ—Ä–∏—Ç–µ –Ω–æ–≤—ã–π –≥–æ—Ä–æ–¥ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ —Ä–∞—Å—Å—ã–ª–∫–∏:",
        reply_markup=reply_markup
    )

async def stop(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    if chat_id in users:
        del users[chat_id]
        await update.message.reply_text("üõë –í—ã –æ—Ç–ø–∏—Å–∞–ª–∏—Å—å –æ—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω—ã—Ö —Ä–∞—Å—Å—ã–ª–æ–∫ —Ü–∏—Ç–∞—Ç.")
    else:
        await update.message.reply_text("‚ÑπÔ∏è –í—ã –µ—â—ë –Ω–µ –±—ã–ª–∏ –ø–æ–¥–ø–∏—Å–∞–Ω—ã.")

async def help_command(update: Update, context: ContextTypes.DEFAULT_TYPE):
    help_text = (
        "ü§ñ –≠—Ç–æ—Ç –±–æ—Ç –ø—Ä–∏—Å—ã–ª–∞–µ—Ç —Å—Ç–æ–∏—á–µ—Å–∫–∏–µ —Ü–∏—Ç–∞—Ç—ã –∫–∞–∂–¥—ã–π –¥–µ–Ω—å –≤ 9 —É—Ç—Ä–∞ –ø–æ –≤–∞—à–µ–º—É –≤—Ä–µ–º–µ–Ω–∏.\n\n"
        "üìå –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n"
        "/start ‚Äî –ø–æ–¥–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ —Ä–∞—Å—Å—ã–ª–∫—É\n"
        "/stop ‚Äî –æ—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Ä–∞—Å—Å—ã–ª–∫—É\n"
        "/setcity ‚Äî –∏–∑–º–µ–Ω–∏—Ç—å –≤—ã–±—Ä–∞–Ω–Ω—ã–π –≥–æ—Ä–æ–¥\n"
        "/share ‚Äî –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –±–æ—Ç–æ–º —Å –¥—Ä—É–∑—å—è–º–∏\n"
        "/help ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ"
    )
    await update.message.reply_text(help_text)

async def share(update: Update, context: ContextTypes.DEFAULT_TYPE):
    share_text = (
        "üì¨ –•–æ—á–µ—à—å –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å—Ç–æ–∏—á–µ—Å–∫–æ–π –º—É–¥—Ä–æ—Å—Ç—å—é?\n\n"
        "–û—Ç–ø—Ä–∞–≤—å —ç—Ç—É —Å—Å—ã–ª–∫—É —Å–≤–æ–∏–º –¥—Ä—É–∑—å—è–º:\n"
        "üëâ https://t.me/StoicTalesBot"
    )
    await update.message.reply_text(share_text)

# –ï–∂–µ–¥–Ω–µ–≤–Ω–∞—è —Ü–∏—Ç–∞—Ç–∞
async def send_daily_quotes():
    now_utc = datetime.utcnow()
    for chat_id, timezone_offset in users.items():
        user_time = now_utc + timedelta(hours=timezone_offset)
        if user_time.hour == 9 and user_time.minute == 0:
            quote = random.choice(QUOTES)
            try:
                await app.bot.send_message(chat_id=chat_id, text=quote, parse_mode="HTML")
                print(f"–¶–∏—Ç–∞—Ç–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ü–∏—Ç–∞—Ç—ã –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")

# –¢–µ—Å—Ç: —Ä–µ—Ñ–ª–µ–∫—Å–∏—è –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
async def send_weekly_reflection():
    now_utc = datetime.utcnow()
    for chat_id, timezone_offset in users.items():
        user_time = now_utc + timedelta(hours=timezone_offset)
        if True:  # !!! –¢–ï–°–¢–û–í–´–ô –†–ï–ñ–ò–ú ‚Äî –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–∞–∂–¥—É—é –º–∏–Ω—É—Ç—É
            message = (
                "üßò‚Äç‚ôÇÔ∏è <b>–°—Ç–æ–∏—á–µ—Å–∫–∞—è –Ω–µ–¥–µ–ª—è. –í—Ä–µ–º—è –¥–ª—è —Ä–∞–∑–º—ã—à–ª–µ–Ω–∏–π.</b>\n\n"
                "<i>–≠—Ç–∏ –≤–æ–ø—Ä–æ—Å—ã –Ω–µ –¥–ª—è –≥–∞–ª–æ—á–∫–∏. –ù–∞–π–¥–∏ –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç —Ç–∏—à–∏–Ω—ã, —á—Ç–æ–±—ã —á–µ—Å—Ç–Ω–æ –≤–∑–≥–ª—è–Ω—É—Ç—å –Ω–∞ –ø—Ä–æ–∂–∏—Ç—É—é –Ω–µ–¥–µ–ª—é. "
                "–û—Ç–≤–µ—Ç—ã –Ω–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã ‚Äî –Ω–æ –æ–Ω–∏ –º–æ–≥—É—Ç –º–Ω–æ–≥–æ–µ –∏–∑–º–µ–Ω–∏—Ç—å –≤ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏.</i>\n\n"
                "1Ô∏è‚É£ <i>–í –∫–∞–∫–∏—Ö —Å–∏—Ç—É–∞—Ü–∏—è—Ö –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ —è –ø–æ–∑–≤–æ–ª–∏–ª —ç–º–æ—Ü–∏—è–º –≤–∑—è—Ç—å –≤–µ—Ä—Ö –Ω–∞–¥ —Ä–∞–∑—É–º–æ–º, "
                "–∏ –∫–∞–∫ –º–æ–≥ –±—ã –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å –±–æ–ª–µ–µ –º—É–¥—Ä–æ, –º—É–∂–µ—Å—Ç–≤–µ–Ω–Ω–æ, —Å–ø—Ä–∞–≤–µ–¥–ª–∏–≤–æ –∏ —É–º–µ—Ä–µ–Ω–Ω–æ?</i>\n\n"
                "2Ô∏è‚É£ <i>–ö–∞–∫–∏–µ –º–æ–∏ –¥–µ–π—Å—Ç–≤–∏—è –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞–ª–∏ —Å—Ç–æ–∏—á–µ—Å–∫–∏–º —Ü–µ–Ω–Ω–æ—Å—Ç—è–º –∏ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º, –∞ –∫–∞–∫–∏–µ —à–ª–∏ –≤—Ä–∞–∑—Ä–µ–∑ —Å –Ω–∏–º–∏?</i>\n\n"
                "3Ô∏è‚É£ <i>–ß—Ç–æ –∏–∑ —Ç–æ–≥–æ, —á—Ç–æ —è —Å—á–∏—Ç–∞–ª –≤–∞–∂–Ω—ã–º –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ, –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ –±—É–¥–µ—Ç –∏–º–µ—Ç—å –∑–Ω–∞—á–µ–Ω–∏–µ —á–µ—Ä–µ–∑ –≥–æ–¥?</i>\n\n"
                "4Ô∏è‚É£ <i>–ö–∞–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –ø–æ—Å–ª—É–∂–∏—Ç—å –¥—Ä—É–≥–∏–º –ª—é–¥—è–º —è —É–ø—É—Å—Ç–∏–ª –Ω–∞ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–µ?</i>\n\n"
                "5Ô∏è‚É£ <i>–ö–∞–∫–∏–µ –ø—Ä–µ–ø—è—Ç—Å—Ç–≤–∏—è –∏ —Ç—Ä—É–¥–Ω–æ—Å—Ç–∏ —ç—Ç–æ–π –Ω–µ–¥–µ–ª–∏ —è —Å–º–æ–≥ –ø—Ä–µ–≤—Ä–∞—Ç–∏—Ç—å –≤ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞, –∞ –∫–∞–∫–∏–µ —É—Ä–æ–∫–∏ —É–ø—É—Å—Ç–∏–ª?</i>"
            )
            try:
                await app.bot.send_message(chat_id=chat_id, text=message, parse_mode="HTML")
                print(f"–¢–µ—Å—Ç–æ–≤–∞—è —Ä–µ—Ñ–ª–µ–∫—Å–∏—è –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}")
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ä–µ—Ñ–ª–µ–∫—Å–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {chat_id}: {e}")

# –ü–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫
scheduler = AsyncIOScheduler()
scheduler.add_job(send_daily_quotes, "interval", minutes=1)
scheduler.add_job(send_weekly_reflection, "interval", minutes=1)
scheduler.start()

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
app.add_handler(CommandHandler("start", start))
app.add_handler(CommandHandler("setcity", set_city))
app.add_handler(CommandHandler("stop", stop))
app.add_handler(CommandHandler("help", help_command))
app.add_handler(CommandHandler("share", share))
app.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_city_choice))

if __name__ == "__main__":
    app.run_polling()